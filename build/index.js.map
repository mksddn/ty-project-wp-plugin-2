{"version":3,"file":"index.js","mappings":"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","sources":["webpack://new-plugin/external window [\"wp\",\"components\"]","webpack://new-plugin/external window [\"wp\",\"coreData\"]","webpack://new-plugin/external window [\"wp\",\"data\"]","webpack://new-plugin/external window [\"wp\",\"editPost\"]","webpack://new-plugin/external window [\"wp\",\"element\"]","webpack://new-plugin/external window [\"wp\",\"plugins\"]","webpack://new-plugin/webpack/bootstrap","webpack://new-plugin/webpack/runtime/compat get default export","webpack://new-plugin/webpack/runtime/define property getters","webpack://new-plugin/webpack/runtime/hasOwnProperty shorthand","webpack://new-plugin/webpack/runtime/make namespace object","webpack://new-plugin/./src/index.js"],"sourcesContent":["module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"plugins\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { PanelRow, TextControl, SelectControl } from \"@wordpress/components\";\nimport { useSelect } from \"@wordpress/data\";\nimport { useEntityProp } from \"@wordpress/core-data\";\nimport { PluginDocumentSettingPanel } from \"@wordpress/edit-post\";\nimport { registerPlugin } from \"@wordpress/plugins\";\nimport { useEffect, useState } from \"@wordpress/element\";\n\nfunction CustomMetaPanel() {\n  const [typp_token] = useEntityProp(\"root\", \"site\", \"typp_token\");\n  const [playersOptions, setPlayersOptions] = useState([]);\n  const getPlayers = () => {\n    fetch(\"https://ty.mailstone.net/api/players\", {\n      method: \"GET\",\n      status: \"active\",\n      headers: {\n        Authorization: typp_token,\n      },\n    })\n      .then((response) => {\n        // console.log(response.ok);\n        return response.json();\n      })\n      .then((data) => {\n        setPlayersOptions(\n          data\n            .filter((player) => player.status == \"active\")\n            .map((player) => ({\n              label: player.name,\n              value: player.id,\n              type: player.type,\n            }))\n        );\n      })\n      .catch((err) => {\n        // renderErrorMessage(err);\n      })\n      .finally((data) => {\n        // console.log(\"fetch finished\");\n        // setPlayersOptions(\n        //   data.map((player) => ({\n        //     label: player.name,\n        //     value: player.id,\n        //   }))\n        // );\n      });\n  };\n  useEffect(() => {\n    getPlayers();\n  }, []);\n  const titleOption = [{ value: \"\", label: \"Select a Player\" }];\n\n  const postType = useSelect(\n    (select) => select(\"core/editor\").getCurrentPostType(),\n    []\n  );\n  const [meta, setMeta] = useEntityProp(\"postType\", postType, \"meta\");\n  const playerName = meta.typp_name;\n  //   const updatePlayerName = (newLabel) => {\n  //     setMeta({ ...meta, typp_name: newLabel });\n  //   };\n  const playerID = meta.typp_id;\n  const updatePlayer = (newValue) => {\n    setMeta({\n      ...meta,\n      typp_id: newValue,\n      typp_name: playersOptions.filter((player) => player.value == newValue)[0]\n        .label,\n    });\n  };\n  const playerPosition = meta.typp_position;\n  const updatePlayerPosition = (newValue) => {\n    setMeta({ ...meta, typp_position: newValue });\n  };\n  return (\n    <PluginDocumentSettingPanel\n      name=\"customMetaPanel\"\n      title=\"TY Project Player\"\n    >\n      <p>\n        <b>\n          Selected Player: <i>{playerName}</i>\n        </b>\n      </p>\n      <br />\n      {/* <TextControl\n        label=\"Selected Player\"\n        value={playerName}\n        //   onChange={updatePlayerID}\n      /> */}\n      <SelectControl\n        onClick={getPlayers}\n        label=\"Select a Static Player\"\n        value={playerID}\n        options={titleOption.concat(\n          playersOptions.filter((player) => player.type == \"static\")\n        )}\n        onChange={updatePlayer}\n      />\n      <br />\n      <SelectControl\n        onClick={getPlayers}\n        label=\"Select a Dynamic Player\"\n        value={playerID}\n        options={titleOption.concat(\n          playersOptions.filter((player) => player.type == \"dynamic\")\n        )}\n        onChange={updatePlayer}\n      />\n      <br />\n      <SelectControl\n        label=\"Select a Player Position\"\n        value={playerPosition}\n        options={[\n          { label: \"Before Content\", value: \"Before Content\" },\n          // { label: \"After 1st Paragraph\", value: \"After 1st Paragraph\" },\n          { label: \"After Content\", value: \"After Content\" },\n        ]}\n        onChange={updatePlayerPosition}\n      />\n    </PluginDocumentSettingPanel>\n  );\n}\n\nregisterPlugin(\"typp-sidebar\", {\n  render: CustomMetaPanel,\n  icon: \"\",\n});\n"],"names":["PanelRow","TextControl","SelectControl","useSelect","useEntityProp","PluginDocumentSettingPanel","registerPlugin","useEffect","useState","CustomMetaPanel","typp_token","playersOptions","setPlayersOptions","getPlayers","fetch","method","status","headers","Authorization","then","response","json","data","filter","player","map","label","name","value","id","type","catch","err","finally","titleOption","postType","select","getCurrentPostType","meta","setMeta","playerName","typp_name","playerID","typp_id","updatePlayer","newValue","playerPosition","typp_position","updatePlayerPosition","createElement","title","onClick","options","concat","onChange","render","icon"],"sourceRoot":""}